"""create status_events table

Revision ID: 801a7522f98a
Revises: e27682eaa1b2
Create Date: 2024-04-12 11:31:02.865470

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '801a7522f98a'
down_revision = 'e27682eaa1b2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('status_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('previous_value', sa.Enum('Needs Division Approval', 'Needs Commissioner Approval', 'Approved - Pending', 'Denied', 'Resolved', 'Hold', name='status'), nullable=True),
    sa.Column('new_value', sa.Enum('Needs Division Approval', 'Needs Commissioner Approval', 'Approved - Pending', 'Denied', 'Resolved', 'Hold', name='status'), nullable=True),
    sa.Column('request_id', sa.String(length=11), nullable=True),
    sa.Column('user_guid', sa.String(length=64), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ),
    sa.ForeignKeyConstraint(['user_guid'], ['users.guid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_constraint('comment_request_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'requests', ['request_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('last_sign_in_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_index('ix_user_email')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_index('ix_user_email', ['email'], unique=True)
        # batch_op.alter_column('last_sign_in_at',
        #        existing_type=postgresql.TIMESTAMP(),
        #        nullable=False)

    # with op.batch_alter_table('comments', schema=None) as batch_op:
    #     batch_op.drop_constraint(None, type_='foreignkey')
    #     batch_op.create_foreign_key('comment_request_id_fkey', 'requests', ['request_id'], ['id'], onupdate='CASCADE')

    op.drop_table('status_events')
    # ### end Alembic commands ###
